apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  namespace: minigame
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/nfs/game
    server: 192.168.100.23

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: minigame
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game
  namespace: minigame
  labels:
    app: game
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game
  template:
    metadata:
      labels:
        app: game
    spec:
      containers:
      - name: game
        image: docker.io/agutierrc/2048_game:latest
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        volumeMounts:
        - name: site-pvc
          mountPath: /var/log/nginx
      volumes:
      - name: site-pvc
        persistentVolumeClaim:
          claimName: nfs-pvc    

---
apiVersion: v1
kind: Service
metadata:
    name: game-service
    namespace: minigame
spec:
    selector:
      app: game
    ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game
  namespace: minigame
  labels:
    app: game
spec:
  rules:
  - host: agutierrc.game
    http:
      paths:
      - path: /
        pathType: "Prefix"
        backend:
          service:
            name: game-service
            port:
              number: 80
